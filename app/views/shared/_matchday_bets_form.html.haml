-if @matchday
  %h1= @matchday.description
  %br/
  - error_count = @bets.map{|bet| bet.errors.count}.sum
  - if error_count > 0
    - error_messages = @bets.map{|bet| bet.errors.full_messages}.flatten.uniq
    - invalid_bets_count = @bets.select{|bet| bet.errors.any?}.count
    #error_explanation
      %h2= "#{pluralize(error_count, "error")} prohibited #{pluralize(invalid_bets_count, "bet")} from being saved:"
      %ul
        - error_messages.each do |msg|
          %li= msg
        
  = form_tag(matchday_bets_path(@matchday), :method => :put) do
    %table.table
      %tr
        %th Match Start
        %th Home team
        %th :
        %th Away team
        %th Bet
        %th Result
        %th Points
      - @bets.each do |bet|
        %tr
          %td= bet.match.match_date
          %td= bet.match.team_a
          %td :
          %td= bet.match.team_b
          %td
            - if bet.match.started?
              = bet.scores_string
            - else
              = fields_for :bets, bet, index: (bet.match_id) do |bet_form|
                .field
                  = bet_form.number_field :score_a
                  = bet_form.number_field :score_b
          %td= bet.match.scores_string
          %td= bet.points
    %p= submit_tag "Submit Bets", :class => 'btn'

  - if @matchday != Match.next.matchday
    - all_players = User.find(:all)
    - all_players.sort! { |a,b| a.points <=> b.points }
    %table.table
      %tr
        %th Name
        - @matchday.matches.each do |match|
          %th= match.team_a +  " : " + match.team_b + " (" + match.score_a.to_s + ":" + match.score_b.to_s + ")"
      - all_players.each do |player|
        %tr
          %td= player.name
          - i = 0
          - @matchday.matches.each do |match|
            - if Bet.find_by_user_id_and_match_id(player.id, match.id)
              %td= Bet.find_by_user_id_and_match_id(player.id, match.id).points
            - elsif
              %td= 0
            - i = i + 1
