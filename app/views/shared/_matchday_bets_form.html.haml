
- error_count = @bets ? @bets.map{|bet| bet.errors.count}.sum : []
- if error_count > 0
  - error_messages = @bets.map{|bet| bet.errors.full_messages}.flatten.uniq
  - invalid_bets_count = @bets.select{|bet| bet.errors.any?}.count
  #error_explanation
    %h2= "#{pluralize(error_count, "error")} prohibited #{pluralize(invalid_bets_count, "bet")} from being saved:"
    %ul
      - error_messages.each do |msg|
        %li= msg

- editable_bets = @bets ? @bets.select{|bet| not bet.match.started?} : []        
- if editable_bets.any?
  = form_tag(matchday_bets_path(@matchday), :method => :put) do
    %table.table
      %tr
        %th Match Start
        %th Home team
        %th :
        %th Away team
        %th Bet
      - @bets.select{|bet| not bet.match.started?}.each do |bet|
        %tr
          %td= bet.match.match_date
          %td= bet.match.team_a
          %td :
          %td= bet.match.team_b
          %td
            = fields_for :bets, bet, index: (bet.match_id) do |bet_form|
              .field
                = bet_form.number_field :score_a, :class => 'input-mini'
                = bet_form.number_field :score_b, :class => 'input-mini'
    %p= submit_tag "Submit Bets", :class => 'btn btn-large btn-primary'
- else 
  %p No matches to bet.
